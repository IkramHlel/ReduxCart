{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\n//Second method to handle asynchronous and side effect code (with action creator)\n//action creator\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success...',\n        message: 'Sending cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","items","totalQuantity","ok","Error","error","fetchCartData","fetchData","data","json","cartData","replaceCart"],"sources":["D:/ReduxCart/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\nimport { cartActions } from \"./cart-slice\";\r\n\r\n//Second method to handle asynchronous and side effect code (with action creator)\r\n//action creator\r\nexport const sendCartData =  (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status:'pending',\r\n            title:'Sending...',\r\n            message:'Sending cart data!'\r\n        }))\r\n\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\r\n                method: 'PUT',\r\n                body: JSON.stringify({items:cart.items, totalQuantity: cart.totalQuantity})\r\n            });\r\n    \r\n            if(!response.ok) {\r\n                throw new Error('Sending cart data failed.')\r\n            }\r\n        }\r\n        try {\r\n            await sendRequest()\r\n            dispatch(uiActions.showNotification({\r\n                status:'success',\r\n                title:'Success...',\r\n                message:'Sending cart data successfully!'\r\n              }))\r\n        } catch (error) {\r\n                  dispatch(uiActions.showNotification({\r\n        status:'error',\r\n        title:'Error!',\r\n        message:'Sending cart data failed!'\r\n      }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchCartData = () =>{\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json')\r\n            \r\n            if(!response.ok) {\r\n                throw new Error ('Could not fetch cart data!')\r\n            }\r\n            const data = await response.json();\r\n           \r\n            return data\r\n        }\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart({items: cartData.items || [], totalQuantity: cartData.totalQuantity}))\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status:'error',\r\n                title:'Error!',\r\n                message:'Fetching cart data failed!'\r\n              }))\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;;AAE1C;AACA;AACA,OAAO,MAAMC,YAAY,GAAKC,IAAI,IAAK;EACnC,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBC,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAC;IACZ,CAAC,CAAC,CAAC;IAEH,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QAC3FC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,KAAK,EAACb,IAAI,CAACa,KAAK;UAAEC,aAAa,EAAEd,IAAI,CAACc;QAAa,CAAC;MAC9E,CAAC,CAAC;MAEF,IAAG,CAACP,QAAQ,CAACQ,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC;IACD,IAAI;MACA,MAAMV,WAAW,CAAC,CAAC;MACnBL,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAChCC,MAAM,EAAC,SAAS;QAChBC,KAAK,EAAC,YAAY;QAClBC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,OAAOY,KAAK,EAAE;MACNhB,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAC9CC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACD;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMa,aAAa,GAAGA,CAAA,KAAK;EAC9B,OAAO,MAAOjB,QAAQ,IAAK;IACvB,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;MAE9F,IAAG,CAACD,QAAQ,CAACQ,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAAE,4BAA4B,CAAC;MAClD;MACA,MAAMI,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAAC;MAClClB,QAAQ,CAACH,WAAW,CAACyB,WAAW,CAAC;QAACV,KAAK,EAAES,QAAQ,CAACT,KAAK,IAAI,EAAE;QAAEC,aAAa,EAAEQ,QAAQ,CAACR;MAAa,CAAC,CAAC,CAAC;IAC3G,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZhB,QAAQ,CAACJ,SAAS,CAACK,gBAAgB,CAAC;QAChCC,MAAM,EAAC,OAAO;QACdC,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IACT;EACJ,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}