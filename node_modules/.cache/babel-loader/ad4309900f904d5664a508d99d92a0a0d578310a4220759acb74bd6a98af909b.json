{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      if (!existingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id === id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","reducer"],"sources":["D:/ReduxCart/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst initialCartState = {items: [], totalQuantity: 0, totalAmount: 0}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        addItemToCart (state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            if(!existingItem) {\r\n                state.items.push({itemId: newItem.id, price: newItem.price, quantity:1, totalPrice: newItem.price, name: newItem.title})\r\n            } else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrice =existingItem.totalPrice + newItem.price\r\n            }\r\n            \r\n        },\r\n        removeItemFromCart (state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id === id)\r\n            } else {\r\n                existingItem.quantity--;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,gBAAgB,GAAG;EAACC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAC,CAAC;AAEtE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACNC,aAAaA,CAAEC,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrE,IAAG,CAACH,YAAY,EAAE;QACdJ,KAAK,CAACR,KAAK,CAACgB,IAAI,CAAC;UAACC,MAAM,EAAEP,OAAO,CAACK,EAAE;UAAEG,KAAK,EAAER,OAAO,CAACQ,KAAK;UAAEC,QAAQ,EAAC,CAAC;UAAEC,UAAU,EAAEV,OAAO,CAACQ,KAAK;UAAEd,IAAI,EAAEM,OAAO,CAACW;QAAK,CAAC,CAAC;MAC5H,CAAC,MAAM;QACHT,YAAY,CAACO,QAAQ,EAAE;QACvBP,YAAY,CAACQ,UAAU,GAAER,YAAY,CAACQ,UAAU,GAAGV,OAAO,CAACQ,KAAK;MACpE;IAEJ,CAAC;IACDI,kBAAkBA,CAAEd,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAGH,YAAY,CAACO,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACuB,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACO,QAAQ,EAAE;MAC3B;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,eAAehB,SAAS,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}