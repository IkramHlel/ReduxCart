{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\n\n//Second method to handle asynchronous and side effect code (with action creator)\n//action creator\nconst sendCart = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\n      method: 'PUT',\n      body: JSON.stringify(cart)\n    });\n    if (!response.ok) {\n      throw new Error('Sending cart data failed.');\n    }\n    dispatch(uiActions.showNotification({\n      status: 'success',\n      title: 'Success...',\n      message: 'Sending cart data successfully!'\n    }));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","uiActions","initialCartState","items","totalQuantity","totalAmount","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCart","cart","dispatch","showNotification","status","message","response","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions","reducer"],"sources":["D:/ReduxCart/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst initialCartState = {items: [], totalQuantity: 0, totalAmount: 0}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        addItemToCart (state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            if(!existingItem) {\r\n                state.items.push({id: newItem.id, price: newItem.price, quantity:1, totalPrice: newItem.price, name: newItem.title})\r\n            } else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrice =existingItem.totalPrice + newItem.price\r\n            }\r\n            \r\n        },\r\n        removeItemFromCart (state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n//Second method to handle asynchronous and side effect code (with action creator)\r\n//action creator\r\nconst sendCart =  (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(uiActions.showNotification({\r\n            status:'pending',\r\n            title:'Sending...',\r\n            message:'Sending cart data!'\r\n        }))\r\n        const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\r\n            method: 'PUT',\r\n            body: JSON.stringify(cart)\r\n        });\r\n\r\n        if(!response.ok) {\r\n            throw new Error('Sending cart data failed.')\r\n        }\r\n\r\n              dispatch(uiActions.showNotification({\r\n        status:'success',\r\n        title:'Success...',\r\n        message:'Sending cart data successfully!'\r\n      }))\r\n    }\r\n}\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,SAASC,SAAS,QAAQ,YAAY;AAEtC,MAAMC,gBAAgB,GAAG;EAACC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAC,CAAC;AAEtE,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACNC,aAAaA,CAAEC,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACrEP,KAAK,CAACP,aAAa,EAAE;MACrB,IAAG,CAACW,YAAY,EAAE;QACdJ,KAAK,CAACR,KAAK,CAACgB,IAAI,CAAC;UAACD,EAAE,EAAEL,OAAO,CAACK,EAAE;UAAEE,KAAK,EAAEP,OAAO,CAACO,KAAK;UAAEC,QAAQ,EAAC,CAAC;UAAEC,UAAU,EAAET,OAAO,CAACO,KAAK;UAAEb,IAAI,EAAEM,OAAO,CAACU;QAAK,CAAC,CAAC;MACxH,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAEP,YAAY,CAACO,UAAU,GAAGT,OAAO,CAACO,KAAK;MACpE;IAEJ,CAAC;IACDI,kBAAkBA,CAAEb,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACR,KAAK,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DP,KAAK,CAACP,aAAa,EAAE;MACrB,IAAGW,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC5BV,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACsB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA,MAAMM,QAAQ,GAAKC,IAAI,IAAK;EACxB,OAAO,MAAOC,QAAQ,IAAK;IACvBA,QAAQ,CAAC3B,SAAS,CAAC4B,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBP,KAAK,EAAC,YAAY;MAClBQ,OAAO,EAAC;IACZ,CAAC,CAAC,CAAC;IACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;MAC3FC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAG,CAACK,QAAQ,CAACM,EAAE,EAAE;MACb,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAChD;IAEMX,QAAQ,CAAC3B,SAAS,CAAC4B,gBAAgB,CAAC;MAC1CC,MAAM,EAAC,SAAS;MAChBP,KAAK,EAAC,YAAY;MAClBQ,OAAO,EAAC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;AACL,CAAC;AAED,OAAO,MAAMS,WAAW,GAAGlC,SAAS,CAACmC,OAAO;AAC5C,eAAenC,SAAS,CAACoC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}