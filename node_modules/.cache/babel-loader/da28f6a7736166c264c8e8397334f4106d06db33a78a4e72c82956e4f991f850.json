{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0,\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialCartState","items","totalQuantity","changed","cartSlice","name","initialState","reducers","replaceCart","state","action","payload","addItemToCart","newItem","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","cartActions","actions","reducer"],"sources":["D:/ReduxCart/src/store/cart-slice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = {items: [], totalQuantity: 0, changed: false}\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        replaceCart(state, action) {\r\n            state.totalQuantity = action.payload.totalQuantity;\r\n            state.items = action.payload.items\r\n        },\r\n        addItemToCart (state, action) {\r\n            const newItem = action.payload;\r\n            const existingItem = state.items.find(item => item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            state.changed= true\r\n            if(!existingItem) {\r\n                state.items.push({id: newItem.id, price: newItem.price, quantity:1, totalPrice: newItem.price, name: newItem.title})\r\n            } else {\r\n                existingItem.quantity++\r\n                existingItem.totalPrice =existingItem.totalPrice + newItem.price\r\n            }\r\n            \r\n        },\r\n        removeItemFromCart (state, action) {\r\n            const id = action.payload;\r\n            const existingItem = state.items.find(item => item.id === id)\r\n            state.totalQuantity--;\r\n            if(existingItem.quantity === 1) {\r\n                state.items = state.items.filter(item => item.id !== id)\r\n            } else {\r\n                existingItem.quantity--;\r\n                existingItem.totalPrice = existingItem.totalPrice - existingItem.price\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,gBAAgB,GAAG;EAACC,KAAK,EAAE,EAAE;EAAEC,aAAa,EAAE,CAAC;EAAEC,OAAO,EAAE;AAAK,CAAC;AAEtE,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC1BM,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEN,gBAAgB;EAC9BO,QAAQ,EAAE;IACNC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACvBD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO,CAACT,aAAa;MAClDO,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAACV,KAAK;IACtC,CAAC;IACDW,aAAaA,CAAEH,KAAK,EAAEC,MAAM,EAAE;MAC1B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACrER,KAAK,CAACP,aAAa,EAAE;MACrBO,KAAK,CAACN,OAAO,GAAE,IAAI;MACnB,IAAG,CAACW,YAAY,EAAE;QACdL,KAAK,CAACR,KAAK,CAACiB,IAAI,CAAC;UAACD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UAAEE,KAAK,EAAEN,OAAO,CAACM,KAAK;UAAEC,QAAQ,EAAC,CAAC;UAAEC,UAAU,EAAER,OAAO,CAACM,KAAK;UAAEd,IAAI,EAAEQ,OAAO,CAACS;QAAK,CAAC,CAAC;MACxH,CAAC,MAAM;QACHR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAEP,YAAY,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACpE;IAEJ,CAAC;IACDI,kBAAkBA,CAAEd,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,YAAY,GAAGL,KAAK,CAACR,KAAK,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACP,aAAa,EAAE;MACrB,IAAGY,YAAY,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACuB,MAAM,CAACR,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC5D,CAAC,MAAM;QACHH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACO,UAAU,GAAGP,YAAY,CAACK,KAAK;MAC1E;IACJ;EACJ;AACJ,CAAC,CAAC;AAIF,OAAO,MAAMM,WAAW,GAAGrB,SAAS,CAACsB,OAAO;AAC5C,eAAetB,SAAS,CAACuB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}