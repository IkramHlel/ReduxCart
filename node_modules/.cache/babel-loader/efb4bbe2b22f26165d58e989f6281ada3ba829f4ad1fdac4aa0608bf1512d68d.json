{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReduxCart\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\nfunction App() {\n  _s();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {}, []);\n\n  //Second method to handle asynchronous and side effect code (with action creator)\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n\n  //First method to handle asynchronous and side effect code (in component with useEffect)\n  // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(uiActions.showNotification({\n  //       status:'pending',\n  //       title:'Sending...',\n  //       message:'Sending cart data!'\n  //     }))\n  //     const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\n  //       method: 'PUT',\n  //       body: JSON.stringify(cart)\n  //     });\n\n  //     if(!response.ok) {\n  //       throw new Error('Sending cart data failed.')\n  //     }\n  //     dispatch(uiActions.showNotification({\n  //       status:'success',\n  //       title:'Success...',\n  //       message:'Sending cart data successfully!'\n  //     }))\n  //   }\n\n  //   if(isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   sendCartData().catch(error => {\n  //     dispatch(uiActions.showNotification({\n  //       status:'error',\n  //       title:'Error!',\n  //       message:'Sending cart data failed!'\n  //     }))\n  //   })\n\n  // }, [cart, dispatch])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"VR1M6IVuuPBVs+1RM1Xbj4a8yvI=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cart","Layout","Products","useEffect","useSelector","useDispatch","uiActions","Notification","sendCartData","fetchCartData","jsxDEV","_jsxDEV","Fragment","_Fragment","isInitial","App","_s","showCart","state","ui","cartIsVisible","cart","dispatch","notification","children","status","title","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ReduxCart/src/App.js"],"sourcesContent":["import Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport {useEffect} from 'react'\nimport {useSelector, useDispatch} from 'react-redux';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport {sendCartData, fetchCartData} from './store/cart-actions.js'\n\nlet isInitial = true;\n\nfunction App() {\n  const showCart = useSelector((state) => state.ui.cartIsVisible)\n  const cart = useSelector((state) => state.cart)\n  const dispatch = useDispatch()\n  const notification = useSelector(state => state.ui.notification)\n\n  useEffect(() => {\n\n  }, [])\n\n  //Second method to handle asynchronous and side effect code (with action creator)\n  useEffect(() => {\n\n    if(isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart))\n  }, [cart, dispatch])\n\n  //First method to handle asynchronous and side effect code (in component with useEffect)\n  // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(uiActions.showNotification({\n  //       status:'pending',\n  //       title:'Sending...',\n  //       message:'Sending cart data!'\n  //     }))\n  //     const response = await fetch('https://react-cart-b606e-default-rtdb.firebaseio.com/cart.json', {\n  //       method: 'PUT',\n  //       body: JSON.stringify(cart)\n  //     });\n\n  //     if(!response.ok) {\n  //       throw new Error('Sending cart data failed.')\n  //     }\n  //     dispatch(uiActions.showNotification({\n  //       status:'success',\n  //       title:'Success...',\n  //       message:'Sending cart data successfully!'\n  //     }))\n  //   }\n\n\n  //   if(isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   sendCartData().catch(error => {\n  //     dispatch(uiActions.showNotification({\n  //       status:'error',\n  //       title:'Error!',\n  //       message:'Sending cart data failed!'\n  //     }))\n  //   })\n\n  // }, [cart, dispatch])\n\n\n\n  return (\n    <>\n    {notification && <Notification status={notification.status} title={notification.title} message={notification.message}/> }\n        <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,wBAAwB;AACzC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAAQC,SAAS,QAAO,OAAO;AAC/B,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,SAAQC,YAAY,EAAEC,aAAa,QAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnE,IAAIC,SAAS,GAAG,IAAI;AAEpB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,QAAQ,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,EAAE,CAACC,aAAa,CAAC;EAC/D,MAAMC,IAAI,GAAGjB,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACG,IAAI,CAAC;EAC/C,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,YAAY,GAAGnB,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACI,YAAY,CAAC;EAEhEpB,SAAS,CAAC,MAAM,CAEhB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAA,SAAS,CAAC,MAAM;IAEd,IAAGW,SAAS,EAAE;MACZA,SAAS,GAAG,KAAK;MACjB;IACF;IAEAQ,QAAQ,CAACd,YAAY,CAACa,IAAI,CAAC,CAAC;EAC9B,CAAC,EAAE,CAACA,IAAI,EAAEC,QAAQ,CAAC,CAAC;;EAEpB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAIA,oBACEX,OAAA,CAAAE,SAAA;IAAAW,QAAA,GACCD,YAAY,iBAAIZ,OAAA,CAACJ,YAAY;MAACkB,MAAM,EAAEF,YAAY,CAACE,MAAO;MAACC,KAAK,EAAEH,YAAY,CAACG,KAAM;MAACC,OAAO,EAAEJ,YAAY,CAACI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnHpB,OAAA,CAACV,MAAM;MAAAuB,QAAA,GACRP,QAAQ,iBAAIN,OAAA,CAACX,IAAI;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrBpB,OAAA,CAACT,QAAQ;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACP,CAAC;AAEP;AAACf,EAAA,CAvEQD,GAAG;EAAA,QACOX,WAAW,EACfA,WAAW,EACPC,WAAW,EACPD,WAAW;AAAA;AAAA4B,EAAA,GAJzBjB,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}